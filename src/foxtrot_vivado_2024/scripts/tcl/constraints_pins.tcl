#!/usr/bin/env tclsh
# constraints_pins.tcl
# ---------------------------------------------------------------------------
# Description : Generate a pin-constraint XDC from “PIN=PORT” mappings and
#               attach it to the Vivado project.
#
# Usage       :
#   vivado -mode batch -source constraints_pins.tcl -tclargs \
#       project_name=<name> \
#       pin_mappings="PIN=PORT,PIN=PORT,…"
#
# Inputs      :
#   project_name – Vivado project basename (without .xpr)
#   pin_mappings – Optional comma-separated “PIN=PORT” list
#
# Outputs     :
#   • pin_constraints.xdc created in $PWD and added to *constrs_1*
# ---------------------------------------------------------------------------

proc abort {msg} {
    puts stderr $msg
    exit 1
}
proc parse_kv_pairs {argv} {
    foreach arg $argv {
        if {[regexp {([^=]+)=(.*)} $arg -> k v]} {
            set ::$k $v
        }
    }
}

parse_kv_pairs $argv
if {![info exists project_name] || $project_name eq ""} {
    abort "ERROR: project_name is required."
}
if {![info exists pin_mappings]} { set pin_mappings "" }

set project_dir  [file join [pwd] vivado_project]
set project_file [file join $project_dir "${project_name}.xpr"]
if {![file exists $project_file]} { abort "ERROR: Project file not found:\n  $project_file" }
open_project $project_file

set xdc_file [file join [pwd] pin_constraints.xdc]
set fp [open $xdc_file w]
puts $fp "# Pin constraints generated by Foxtrot"
puts $fp "# Generated on [clock format [clock seconds] -format {%Y-%m-%d %H:%M:%S}]"
puts $fp ""

set written 0
foreach pair [split $pin_mappings ,] {
    if {$pair eq ""} { continue }
    if {![string match "*=*" $pair]} {
        puts stderr "WARNING: malformed mapping \"$pair\" – skipped."
        continue
    }
    lassign [split $pair =] pin sig
    puts $fp [format {set_property PACKAGE_PIN {%s} [get_ports {%s}]} $pin $sig]
    puts $fp [format {set_property IOSTANDARD LVCMOS15 [get_ports {%s}]} $sig]
    incr written
}
close $fp
puts [format {Generated %s  (%d pin%s)} $xdc_file $written [expr {$written==1?"":"s"}]]

if {$written>0} {
    add_files -fileset constrs_1 $xdc_file
    set_property used_in_synthesis      true  [get_files $xdc_file]
    set_property used_in_implementation true  [get_files $xdc_file]
    update_compile_order -fileset constrs_1
}
close_project
puts "constraints_pins.tcl finished OK"
