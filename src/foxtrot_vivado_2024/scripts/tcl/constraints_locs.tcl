#!/usr/bin/env tclsh
# constraints_locs.tcl
# ---------------------------------------------------------------------------
# Description : Generate an XDC file with LOC constraints and attach it to a
#               Vivado project.
#
# Usage       :
#   vivado -mode batch -source constraints_locs.tcl -tclargs \
#       project_name=<MyProject> \
#       output_dir=/absolute/path/to/output \
#       location_mappings="SLICE_X0Y0=signal1,SLICE_X1Y1=signal2"
#
# Inputs      :
#   project_name       – Vivado project basename (without .xpr)
#   output_dir         – Directory containing vivado_project/<project_name>.xpr
#   location_mappings  – Optional comma-separated “LOC=cell” pairs
#
# Outputs     :
#   • location_constraints.xdc written to $output_dir
#   • File added to the 'constrs_1' fileset (created if missing)
# ---------------------------------------------------------------------------

# -- helpers -----------------------------------------------------------
proc abort {msg} {
    puts stderr $msg
    exit 1
}

proc parse_kv_pairs {argv} {
    foreach arg $argv {
        if {[regexp {([^=]+)=(.*)} $arg -> k v]} {
            set ::$k $v
        }
    }
}

# -- argument handling -------------------------------------------------
parse_kv_pairs $argv

foreach v {project_name output_dir} {
    if {![info exists ::$v] || "$::${v}" eq ""} {
        abort "ERROR: '$v' argument is required."
    }
}
if {![info exists ::location_mappings]} { set ::location_mappings "" }

# -- open project ------------------------------------------------------
set project_file [file join $output_dir vivado_project "${project_name}.xpr"]
if {![file exists $project_file]} {
    abort "ERROR: Project file not found: $project_file"
}
open_project $project_file

# -- write XDC ---------------------------------------------------------
set xdc_file [file normalize [file join $output_dir location_constraints.xdc]]
set fp [open $xdc_file w]
puts $fp "# LOC constraints generated by constraints_locs.tcl"
puts $fp "# Project  : $project_name"
puts $fp "# Generated: [clock format [clock seconds] -format {%Y-%m-%d %H:%M:%S}]"
puts $fp ""

foreach pair [split $location_mappings ,] {
    if {[regexp {(.+)=(.+)} $pair -> loc cell]} {
        puts $fp "set_property LOC $loc \[get_cells $cell\]"
    }
}
close $fp

if {[llength [get_files -quiet $xdc_file]] == 0} {
    add_files -fileset constrs_1 $xdc_file
}
close_project
puts "constraints_locs.tcl finished OK"
